<% # Clients of this partial must provide the following variable:
   # comment
   # user
%>

<% if comment.can_be_voted_on? && user %>
    <% can_vote = comment.can_be_voted_on_by?(user) %>
    <% vote = comment.get_vote_by(user) %>

    <div class="large-9 columns">
      <% if can_vote && (vote.blank? || !vote.vote_flag) %>
          <%= form_tag commontator.upvote_comment_path(comment), :method => :patch, :remote => true do %>
              <%= submit_tag comment.upvotes.size.to_s, class: "voto-positivo" %>
          <% end %>
      <% elsif can_vote %>
          <%= form_tag commontator.unvote_comment_path(comment), :method => :patch, :remote => true do %>
              <%= submit_tag comment.upvotes.size.to_s, class: "voto-positivo" %>
          <% end %>
      <% else %>
          <div class="voto-positivo hide"><%= comment.upvotes.size.to_s %></div>
      <% end %>

      <% if can_vote && (vote.blank? || vote.vote_flag) %>
          <%= form_tag commontator.downvote_comment_path(comment), :method => :patch, :remote => true do %>
              <%= submit_tag comment.downvotes.size.to_s, class: "voto-negativo" %>
          <% end %>
      <% elsif can_vote %>
          <%= form_tag commontator.unvote_comment_path(comment), :method => :patch, :remote => true do %>
              <%= submit_tag comment.downvotes.size.to_s, class: "voto-negativo" %>
          <% end %>
      <% else %>
          <div class="voto-negativo hide"><%= comment.downvotes.size.to_s %></div>
      <% end %>
    </div>
<% end %>
